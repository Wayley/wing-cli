#!/usr/bin/env node

/*!
 * wing-cli v0.0.1
 * Copyright © Wayley 2017-2021 Robben Wayley
 * Released under the MIT License.
 *
 */(()=>{var e={306:e=>{"use strict";e.exports=JSON.parse('{"name":"wing-cli","version":"0.0.1","description":"a cli tool for quickly writing plug-in module","copyright":"Wayley","main":"bin/wing.js","bin":{"wing":"dist/wing.js"},"files":["dist/*.js"],"scripts":{"test":"echo \\"Error: no test specified\\" && exit 1","build":"webpack","build:exclude_external":"webpack --env EXCLUDE_EXTERNALS"},"repository":{"type":"git","url":"git+https://github.com/Wayley/wing-cli.git"},"keywords":["cli","module","tool"],"author":{"name":"Robben Wayley","email":"hb_wangzheng@163.com"},"license":"MIT","bugs":{"url":"https://github.com/Wayley/wing-cli/issues"},"homepage":"https://github.com/Wayley/wing-cli#readme","engines":{"node":"^10.12.0 || ^12.0.0 || >= 14.0.0"},"dependencies":{"chalk":"^4.1.0","commander":"^6.2.0","fs-extra":"^9.0.1","inquirer":"^7.3.3","semver":"^7.3.2","shelljs":"^0.8.4","validate-npm-package-name":"^3.0.0"},"devDependencies":{"terser-webpack-plugin":"^5.1.1","webpack":"^5.37.0","webpack-cli":"^4.7.0","webpack-shebang-plugin":"^1.1.4"}}')},758:(e,r,i)=>{const{engines:n,name:o,version:t,copyright:a}=i(306);e.exports={engines:n,name:o,version:t,copyright:`Copyright © ${a} 20172-${(new Date).getFullYear()}`}},941:(e,r,i)=>{const n=i(622),o=i(298),t=i(242),a=i(254),s=i(39),{exec:c}=i(524),{writeFiles:l}=i(164);function p(e,r){this.appName=e,this.targetDir=r}p.prototype.create=async function(){const{framework:e}=await s.prompt([{name:"framework",type:"list",message:"Pick a framework which you want: ",choices:[{name:"Micro frontend Pure html",value:"micro.fe.purehtml"},{name:"Micro frontend App with React(Ant Design)",value:"micro.fe.react.antd"},{name:"Micro frontend App with Vue(iView)",value:"micro.fe.vue.iview"},{name:"Micro frontend Main App",value:"micro.fe.main"},{name:"React with Ant Design",value:"react.antd"},{name:"Vue with iView",value:"vue.iview"}]}]),{appName:r,targetDir:i}=this,n={name:r,framework:e};console.log(n),await l(i,{"package.json":JSON.stringify(n,null,2)}),console.log("Success!")},e.exports=(...e)=>async function(e){const r=a(e),i=n.resolve(process.cwd(),e);if(r.validForNewPackages||(console.error(t.red(`Invalid app name: "${e}"`)),r.errors&&r.errors.forEach((e=>{console.error(t.red.dim("Error: "+e))})),r.warnings&&r.warnings.forEach((e=>{console.error(t.red.dim("Warning: "+e))})),exit(1)),o.existsSync(i)){const{action:e}=await s.prompt([{name:"action",type:"list",message:`Target directory ${t.cyan(i)} already exists. Pick an action:`,choices:[{name:"Overwrite",value:"overwrite"},{name:"Cancel",value:"cancel"}]}]);if("overwrite"!==e)return;console.log(`\nRemoving ${t.cyan(i)} ...`),await o.remove(i)}const c=new p(e,i);await c.create()}(...e).catch((e=>{e&&process.exit(1)}))},164:(e,r,i)=>{const n=i(298),o=i(622);e.exports={writeFiles:async function(e,r){Object.keys(r).forEach((i=>{const t=o.join(e,i);n.ensureDirSync(o.dirname(t)),n.writeFileSync(t,r[i])}))}}},242:e=>{"use strict";e.exports=require("chalk")},647:e=>{"use strict";e.exports=require("commander")},298:e=>{"use strict";e.exports=require("fs-extra")},39:e=>{"use strict";e.exports=require("inquirer")},622:e=>{"use strict";e.exports=require("path")},513:e=>{"use strict";e.exports=require("semver")},524:e=>{"use strict";e.exports=require("shelljs")},254:e=>{"use strict";e.exports=require("validate-npm-package-name")}},r={};function i(n){var o=r[n];if(void 0!==o)return o.exports;var t=r[n]={exports:{}};return e[n](t,t.exports,i),t.exports}(()=>{"use strict";const{satisfies:e}=i(513),r=i(242),{engines:n,name:o,version:t}=i(758);var a,s;a=n.node,s=o,e(process.version,a)||(console.log(r.red(`You are using Node ${process.version}, but this version of ${s} requires Node ${a}'.\n\nPlease upgrade your Node version.`)),process.exit(1));const c=i(647),l=i(941);c.version(t).usage("<command> [options]"),c.command("create <app-name>").action((e=>{l(e)})),c.command("init <app-name>").action((e=>{console.log(r.blue("init "),r.yellow(`command in ${e} is in development..., and you can try`),r.green(" create "),r.yellow("command"))})),c.command("plugin <plugin-name>").action((e=>{console.log(r.blue("plugin "),r.yellow(`command in ${e} is in development..., and you can try`),r.green(" create "),r.yellow("command"))})),c.parse(process.argv)})()})();